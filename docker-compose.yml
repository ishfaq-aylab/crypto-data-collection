version: '3.8'

services:
  api-server:
    build: .
    ports:
      - "5001:5001"
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:adminaylab123@16.171.27.60:27017}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-model-collections}
      - API_HOST=0.0.0.0
      - API_PORT=5001
      - API_DEBUG=false
    depends_on:
      - mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crypto-network

  data-collection:
    build: .
    command: python run_data_collection.py
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:adminaylab123@16.171.27.60:27017}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-model-collections}
      - COLLECTION_DURATION=0
      - COLLECTION_POLL_INTERVAL=30
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - crypto-network

  historical-collection:
    build: .
    command: python manage_historical_collection.py start
    environment:
      - MONGODB_URL=${MONGODB_URL:-mongodb://admin:adminaylab123@16.171.27.60:27017}
      - MONGODB_DATABASE=${MONGODB_DATABASE:-model-collections}
    depends_on:
      - mongodb
    restart: "no"  # Run once for historical data
    networks:
      - crypto-network

  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=model-collections
    networks:
      - crypto-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api-server
    restart: unless-stopped
    networks:
      - crypto-network

volumes:
  mongodb_data:

networks:
  crypto-network:
    driver: bridge
